package quiz07;

public class Game {

	//플레이어가 여러명 있을 수 있다.
	//field

	//비정상적인 방법
	//private Player[] player =new Player[playerCount];
	
	//1.정상적인 방법
	private Player[] player; //선언부분 -플레이어 클래스 겟터 세터 상관없이 플레이어들이 여러명이 저장된곳이다.
	
	//constructor
	public Game(int playerCount) { //분리된 선언
		player =new Player[playerCount];
	}	
	//method
	public void setPlayer() {
		String[] name = {"alice","david","brown","emily","james"};//초기화 선언을 줘서 임의로 지정
		for(int i=0; i<player.length; i++) {
			 //처리방법 1 player[i].setName(name); 플레이 생성자가 없을때 이러한 방식으로 처리하는방법
			player[i] =new Player(name[(int)(Math.random()*name.length)]); //똑같은 플레이어가 생길수도 있다는것
		
		}
	}
	public void play() { 
		//Player들의 Play() 결과를 저장할 int[] times
		int[] times = new int[player.length];
		for(int i=0; i<player.length; i++) {
			times[i] = player[i].play();
		}
		//times 배열에서 10과 가장 가까운 값을 찾는것
		//(time[i]-10) 10이랑 가깞다는건 절대값을 구한뒤 그중 가장 작은값을(최소값을) 구한다.
		//절대값 : Math.abs(n)
		//abs는 앱솔루트 넘버
	}
}
